actual motif: 
NXXXDXXXDXDE --> NEDFDTTCDPDE
found motif:
NXDXDXXXDXDE --> NEDFDTTCDPDE

actual motif
DXXXDXXXDXDE --> DGDLDHFWDQDE
found motif:
DXDXDXXXDXDE --> DGDLDHFWDQDE

--- actual ---
NXDXDXXXDXDE
['NKDCDGLFDIDE', 'NCDNDMLWDSDE', 'NHDYDCRTDRDE', 'NWDEDMTLDTDE', 'NLDMDWANDLDE', 'NHDLDQVCDVDE', 'NYDSDSMDDCDE', 'NVDIDKIRDTDE']
--- compare ---
['NKDCDGLFDIDE', 'NCDNDMLWDSDE', 'NHDYDCRTDRDE', 'NWDEDMTLDTDE', 'NLDMDWANDLDE', 'NHDLDQVCDVDE', 'NEDFDTTCDPDE', 'NYDSDSMDDCDE', 'NVDIDKIRDTDE']
Result from checkMotif: False
ABOVE IS NOT EQUAL

--- actual ---
DXXXDXXXDXDE
['DGDLDHFWDQDE', 'DIQLDPDCDQDE', 'DPYSDCGHDMDE', 'DQTWDQLGDLDE']
--- compare ---
['DIQLDPDCDQDE', 'DPYSDCGHDMDE', 'DQTWDQLGDLDE']
Result from checkMotif: False
ABOVE IS NOT EQUAL

--- actual ---
DXDXDXXXDXDE
['DGDNDRKEDVDE', 'DQDFDTFCDRDE', 'DMDSDRDIDFDE', 'DMDGDCAVDDDE', 'DSDHDELEDCDE', 'DADSDCVFDIDE', 'DQDIDAWQDTDE', 'DPDLDANSDHDE']
--- compare ---
['DGDLDHFWDQDE', 'DGDNDRKEDVDE', 'DQDFDTFCDRDE', 'DMDSDRDIDFDE', 'DMDGDCAVDDDE', 'DSDHDELEDCDE', 'DADSDCVFDIDE', 'DQDIDAWQDTDE', 'DPDLDANSDHDE']
Result from checkMotif: False
ABOVE IS NOT EQUAL

--- actual ---
NXXXDXXXDXDE
['NRQKDPCLDLDE', 'NDYMDIRQDRDE', 'NEDFDTTCDPDE']
--- compare ---
['NRQKDPCLDLDE', 'NDYMDIRQDRDE']
Result from checkMotif: False
ABOVE IS NOT EQUAL



1,2,3,4,5

1,1
1,2
1,3
1,4
1,5
2,1
2,2
2,3
.
.
.
5,5

for elem1 in [value1, value2,...]:
    first outer loop --> elem1 = 1
    for elem2 in [value1, value2,...]:

        first outer loop --> elem1 = 1

dict = {key1: [value1, value2,...], key2: [value1, value2, ... ]}


def emptyFunc():
    pass


i = 3
   v
MSQRT
MSPAT
   ^

score = 3


score = 0
compareSeq("MSQRT", "MSPAT")    # <-- score = 3
compareSeq("MSQRT", "MSPAT")    # <-- 


["MSQRT", "MSPAT"] # <-- len(["MSQRT", "MSPAT"]) = 2

[[0,0],[0,0]]

data = [[0 for _ in range(len(["MSQRT", "MSPAT"]))] for _ in range(len(["MSQRT", "MSPAT"]))]
data[0][0] = 1
# [[1,0],[0,0]]
data[1][0] = 1
# [[1,0],[0,0]]
     ^0    ^1
         [0,0]
         ^0 ^1
 
value_list = ["MSQRT", "MSPAT", "QSPAT"]
                ^ 0      ^ 1

for elem1 in value_list:

for i in range(len(value_list)):
    elem = value_list[i]
    # first loop i = 0
    # second loop i = 1
    # third loop i = 2


variable = "Yee Chuen"

... 1000 lines ...

save_name = f"{variable}"

